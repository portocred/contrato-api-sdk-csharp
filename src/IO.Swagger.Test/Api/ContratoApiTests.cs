/* 
 * Gestão de Contratos
 *
 * API de Gestão de Contratos.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ContratoApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ContratoApiTests
    {
        private ContratoApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ContratoApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ContratoApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ContratoApi
            //Assert.IsInstanceOfType(typeof(ContratoApi), instance, "instance is a ContratoApi");
        }

        
        /// <summary>
        /// Test ContratosGet
        /// </summary>
        [Test]
        public void ContratosGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string accessToken = null;
            //string codigoLojista = null;
            //string cpf = null;
            //var response = instance.ContratosGet(clientId, accessToken, codigoLojista, cpf);
            //Assert.IsInstanceOf<GetContratosResponse> (response, "response is GetContratosResponse");
        }
        
        /// <summary>
        /// Test ContratosIdCancelamentoPut
        /// </summary>
        [Test]
        public void ContratosIdCancelamentoPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string accessToken = null;
            //string id = null;
            //byte[] xAuthorization = null;
            //string codigoLojista = null;
            //string cpf = null;
            //string operador = null;
            //var response = instance.ContratosIdCancelamentoPut(clientId, accessToken, id, xAuthorization, codigoLojista, cpf, operador);
            //Assert.IsInstanceOf<ExclusaoPagamentoResponse> (response, "response is ExclusaoPagamentoResponse");
        }
        
        /// <summary>
        /// Test ContratosIdExclusaoPagamentoDelete
        /// </summary>
        [Test]
        public void ContratosIdExclusaoPagamentoDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string accessToken = null;
            //string id = null;
            //byte[] xAuthorization = null;
            //string codigoLojista = null;
            //string cpf = null;
            //string operador = null;
            //var response = instance.ContratosIdExclusaoPagamentoDelete(clientId, accessToken, id, xAuthorization, codigoLojista, cpf, operador);
            //Assert.IsInstanceOf<ExclusaoPagamentoResponse> (response, "response is ExclusaoPagamentoResponse");
        }
        
        /// <summary>
        /// Test ContratosIdGet
        /// </summary>
        [Test]
        public void ContratosIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string clientId = null;
            //string accessToken = null;
            //string codigoLojista = null;
            //var response = instance.ContratosIdGet(id, clientId, accessToken, codigoLojista);
            //Assert.IsInstanceOf<GetContratosResponse> (response, "response is GetContratosResponse");
        }
        
        /// <summary>
        /// Test ContratosIdSolicitacaoPagamentosPost
        /// </summary>
        [Test]
        public void ContratosIdSolicitacaoPagamentosPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string clientId = null;
            //string accessToken = null;
            //SolicitacaoPagamentoRequest solicitacaoPagamento = null;
            //var response = instance.ContratosIdSolicitacaoPagamentosPost(id, clientId, accessToken, solicitacaoPagamento);
            //Assert.IsInstanceOf<SolicitacaoPagamentoResponse> (response, "response is SolicitacaoPagamentoResponse");
        }
        
        /// <summary>
        /// Test ContratosParcelasGet
        /// </summary>
        [Test]
        public void ContratosParcelasGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string accessToken = null;
            //string codigoLojista = null;
            //string cpf = null;
            //string dataInicio = null;
            //string dataFim = null;
            //var response = instance.ContratosParcelasGet(clientId, accessToken, codigoLojista, cpf, dataInicio, dataFim);
            //Assert.IsInstanceOf<GetParcelasResponse> (response, "response is GetParcelasResponse");
        }
        
        /// <summary>
        /// Test ContratosStatusGet
        /// </summary>
        [Test]
        public void ContratosStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string accessToken = null;
            //string cpf = null;
            //var response = instance.ContratosStatusGet(clientId, accessToken, cpf);
            //Assert.IsInstanceOf<GetStatusContratoResponse> (response, "response is GetStatusContratoResponse");
        }
        
    }

}
