/* 
 * Gestão de Contratos
 *
 * API de Gestão de Contratos.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Entidade representando uma parcela de um contrato, para a operação de recuperação de contratos.
    /// </summary>
    [DataContract]
    public partial class GetContratosParcelaResponse :  IEquatable<GetContratosParcelaResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetContratosParcelaResponse" /> class.
        /// </summary>
        /// <param name="NumeroParcela">Número da parcela..</param>
        /// <param name="DataVencimento">Data de vencimento da parcela..</param>
        /// <param name="PMT">Código da parcela..</param>
        /// <param name="NumeroDiasAtraso">Número de dias em atraso..</param>
        /// <param name="PercentualMulta">Valor do percentual de multa..</param>
        /// <param name="ValorMulta">Valor da multa..</param>
        /// <param name="PercentualJurosAtraso">Valor do percentual de juros de atraso..</param>
        /// <param name="ValorJurosAtraso">Valor de juros de atraso..</param>
        /// <param name="ValorIOFAtraso">Valor do IOF de atraso..</param>
        /// <param name="ValorDescontos">Valor dos descontos..</param>
        /// <param name="Despesas">Valor de despesas..</param>
        /// <param name="ValorSaldoParcela">Valor do saldo total da parcela..</param>
        public GetContratosParcelaResponse(string NumeroParcela = default(string), string DataVencimento = default(string), double? PMT = default(double?), int? NumeroDiasAtraso = default(int?), double? PercentualMulta = default(double?), double? ValorMulta = default(double?), double? PercentualJurosAtraso = default(double?), double? ValorJurosAtraso = default(double?), double? ValorIOFAtraso = default(double?), double? ValorDescontos = default(double?), double? Despesas = default(double?), double? ValorSaldoParcela = default(double?))
        {
            this.NumeroParcela = NumeroParcela;
            this.DataVencimento = DataVencimento;
            this.PMT = PMT;
            this.NumeroDiasAtraso = NumeroDiasAtraso;
            this.PercentualMulta = PercentualMulta;
            this.ValorMulta = ValorMulta;
            this.PercentualJurosAtraso = PercentualJurosAtraso;
            this.ValorJurosAtraso = ValorJurosAtraso;
            this.ValorIOFAtraso = ValorIOFAtraso;
            this.ValorDescontos = ValorDescontos;
            this.Despesas = Despesas;
            this.ValorSaldoParcela = ValorSaldoParcela;
        }
        
        /// <summary>
        /// Número da parcela.
        /// </summary>
        /// <value>Número da parcela.</value>
        [DataMember(Name="numeroParcela", EmitDefaultValue=false)]
        public string NumeroParcela { get; set; }

        /// <summary>
        /// Data de vencimento da parcela.
        /// </summary>
        /// <value>Data de vencimento da parcela.</value>
        [DataMember(Name="dataVencimento", EmitDefaultValue=false)]
        public string DataVencimento { get; set; }

        /// <summary>
        /// Código da parcela.
        /// </summary>
        /// <value>Código da parcela.</value>
        [DataMember(Name="PMT", EmitDefaultValue=false)]
        public double? PMT { get; set; }

        /// <summary>
        /// Número de dias em atraso.
        /// </summary>
        /// <value>Número de dias em atraso.</value>
        [DataMember(Name="numeroDiasAtraso", EmitDefaultValue=false)]
        public int? NumeroDiasAtraso { get; set; }

        /// <summary>
        /// Valor do percentual de multa.
        /// </summary>
        /// <value>Valor do percentual de multa.</value>
        [DataMember(Name="percentualMulta", EmitDefaultValue=false)]
        public double? PercentualMulta { get; set; }

        /// <summary>
        /// Valor da multa.
        /// </summary>
        /// <value>Valor da multa.</value>
        [DataMember(Name="valorMulta", EmitDefaultValue=false)]
        public double? ValorMulta { get; set; }

        /// <summary>
        /// Valor do percentual de juros de atraso.
        /// </summary>
        /// <value>Valor do percentual de juros de atraso.</value>
        [DataMember(Name="percentualJurosAtraso", EmitDefaultValue=false)]
        public double? PercentualJurosAtraso { get; set; }

        /// <summary>
        /// Valor de juros de atraso.
        /// </summary>
        /// <value>Valor de juros de atraso.</value>
        [DataMember(Name="valorJurosAtraso", EmitDefaultValue=false)]
        public double? ValorJurosAtraso { get; set; }

        /// <summary>
        /// Valor do IOF de atraso.
        /// </summary>
        /// <value>Valor do IOF de atraso.</value>
        [DataMember(Name="valorIOFAtraso", EmitDefaultValue=false)]
        public double? ValorIOFAtraso { get; set; }

        /// <summary>
        /// Valor dos descontos.
        /// </summary>
        /// <value>Valor dos descontos.</value>
        [DataMember(Name="valorDescontos", EmitDefaultValue=false)]
        public double? ValorDescontos { get; set; }

        /// <summary>
        /// Valor de despesas.
        /// </summary>
        /// <value>Valor de despesas.</value>
        [DataMember(Name="despesas", EmitDefaultValue=false)]
        public double? Despesas { get; set; }

        /// <summary>
        /// Valor do saldo total da parcela.
        /// </summary>
        /// <value>Valor do saldo total da parcela.</value>
        [DataMember(Name="valorSaldoParcela", EmitDefaultValue=false)]
        public double? ValorSaldoParcela { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetContratosParcelaResponse {\n");
            sb.Append("  NumeroParcela: ").Append(NumeroParcela).Append("\n");
            sb.Append("  DataVencimento: ").Append(DataVencimento).Append("\n");
            sb.Append("  PMT: ").Append(PMT).Append("\n");
            sb.Append("  NumeroDiasAtraso: ").Append(NumeroDiasAtraso).Append("\n");
            sb.Append("  PercentualMulta: ").Append(PercentualMulta).Append("\n");
            sb.Append("  ValorMulta: ").Append(ValorMulta).Append("\n");
            sb.Append("  PercentualJurosAtraso: ").Append(PercentualJurosAtraso).Append("\n");
            sb.Append("  ValorJurosAtraso: ").Append(ValorJurosAtraso).Append("\n");
            sb.Append("  ValorIOFAtraso: ").Append(ValorIOFAtraso).Append("\n");
            sb.Append("  ValorDescontos: ").Append(ValorDescontos).Append("\n");
            sb.Append("  Despesas: ").Append(Despesas).Append("\n");
            sb.Append("  ValorSaldoParcela: ").Append(ValorSaldoParcela).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetContratosParcelaResponse);
        }

        /// <summary>
        /// Returns true if GetContratosParcelaResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of GetContratosParcelaResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetContratosParcelaResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.NumeroParcela == input.NumeroParcela ||
                    (this.NumeroParcela != null &&
                    this.NumeroParcela.Equals(input.NumeroParcela))
                ) && 
                (
                    this.DataVencimento == input.DataVencimento ||
                    (this.DataVencimento != null &&
                    this.DataVencimento.Equals(input.DataVencimento))
                ) && 
                (
                    this.PMT == input.PMT ||
                    (this.PMT != null &&
                    this.PMT.Equals(input.PMT))
                ) && 
                (
                    this.NumeroDiasAtraso == input.NumeroDiasAtraso ||
                    (this.NumeroDiasAtraso != null &&
                    this.NumeroDiasAtraso.Equals(input.NumeroDiasAtraso))
                ) && 
                (
                    this.PercentualMulta == input.PercentualMulta ||
                    (this.PercentualMulta != null &&
                    this.PercentualMulta.Equals(input.PercentualMulta))
                ) && 
                (
                    this.ValorMulta == input.ValorMulta ||
                    (this.ValorMulta != null &&
                    this.ValorMulta.Equals(input.ValorMulta))
                ) && 
                (
                    this.PercentualJurosAtraso == input.PercentualJurosAtraso ||
                    (this.PercentualJurosAtraso != null &&
                    this.PercentualJurosAtraso.Equals(input.PercentualJurosAtraso))
                ) && 
                (
                    this.ValorJurosAtraso == input.ValorJurosAtraso ||
                    (this.ValorJurosAtraso != null &&
                    this.ValorJurosAtraso.Equals(input.ValorJurosAtraso))
                ) && 
                (
                    this.ValorIOFAtraso == input.ValorIOFAtraso ||
                    (this.ValorIOFAtraso != null &&
                    this.ValorIOFAtraso.Equals(input.ValorIOFAtraso))
                ) && 
                (
                    this.ValorDescontos == input.ValorDescontos ||
                    (this.ValorDescontos != null &&
                    this.ValorDescontos.Equals(input.ValorDescontos))
                ) && 
                (
                    this.Despesas == input.Despesas ||
                    (this.Despesas != null &&
                    this.Despesas.Equals(input.Despesas))
                ) && 
                (
                    this.ValorSaldoParcela == input.ValorSaldoParcela ||
                    (this.ValorSaldoParcela != null &&
                    this.ValorSaldoParcela.Equals(input.ValorSaldoParcela))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.NumeroParcela != null)
                    hashCode = hashCode * 59 + this.NumeroParcela.GetHashCode();
                if (this.DataVencimento != null)
                    hashCode = hashCode * 59 + this.DataVencimento.GetHashCode();
                if (this.PMT != null)
                    hashCode = hashCode * 59 + this.PMT.GetHashCode();
                if (this.NumeroDiasAtraso != null)
                    hashCode = hashCode * 59 + this.NumeroDiasAtraso.GetHashCode();
                if (this.PercentualMulta != null)
                    hashCode = hashCode * 59 + this.PercentualMulta.GetHashCode();
                if (this.ValorMulta != null)
                    hashCode = hashCode * 59 + this.ValorMulta.GetHashCode();
                if (this.PercentualJurosAtraso != null)
                    hashCode = hashCode * 59 + this.PercentualJurosAtraso.GetHashCode();
                if (this.ValorJurosAtraso != null)
                    hashCode = hashCode * 59 + this.ValorJurosAtraso.GetHashCode();
                if (this.ValorIOFAtraso != null)
                    hashCode = hashCode * 59 + this.ValorIOFAtraso.GetHashCode();
                if (this.ValorDescontos != null)
                    hashCode = hashCode * 59 + this.ValorDescontos.GetHashCode();
                if (this.Despesas != null)
                    hashCode = hashCode * 59 + this.Despesas.GetHashCode();
                if (this.ValorSaldoParcela != null)
                    hashCode = hashCode * 59 + this.ValorSaldoParcela.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
